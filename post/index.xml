<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Spielsand</title>
    <link>https://chiyosbigdragon.github.io/post/</link>
    <description>Recent content in Posts on Spielsand</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>&amp;copy; 2019. All rights reserved.</copyright>
    <lastBuildDate>Wed, 27 Mar 2019 10:00:00 +0900</lastBuildDate>
    
	<atom:link href="https://chiyosbigdragon.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>ブログ記事中のスニペットを外部参照する</title>
      <link>https://chiyosbigdragon.github.io/post/2019/03/27/20190327/</link>
      <pubDate>Wed, 27 Mar 2019 10:00:00 +0900</pubDate>
      
      <guid>https://chiyosbigdragon.github.io/post/2019/03/27/20190327/</guid>
      <description>上を表示するためのHTMLは次の通りです．
&amp;lt;pre&amp;gt;&amp;lt;code class=&amp;quot;language-cpp&amp;quot; src=&amp;quot;https://chiyosbigdragon.github.io/post/2019/03/27/sample.cpp&amp;quot;&amp;gt;&amp;lt;/code&amp;gt;&amp;lt;/pre&amp;gt;  端的には&amp;lt;pre&amp;gt;&amp;lt;code&amp;gt;にsrc属性を追加します．
動機 最近はもっぱらラップトップでブログを書くわけですが，画面が小さく1，エディタとプレビューでいっぱいいっぱいになってしまいます．こんな状態でスニペットを含むMarkdownを開いた光景は，JR武蔵小杉駅の南武線ホームを彷彿とさせます．
スニペットを省略できれば全体の見通しが良くなることはもちろん，メンテナンス性の向上(?)も期待されます．どっかの数学者も言ってましたね．「ソースコードは分割せよ」って．
流れ  jQueryを読み込む DOMの書き換え Markdown  jQueryを読み込む 今回はjQueryを使うことにします．&amp;lt;head&amp;gt;内で読み込み．
&amp;lt;head&amp;gt; &amp;lt;script src=&amp;quot;https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;head&amp;gt;  DOMの書き換え  メモ  indexと書いたが実際は何を指しているのか不明．なんだろう．  Markdown 今回の記事のソースコードはこんな感じ．
--- title: &amp;quot;ブログ記事中のスニペットを外部参照する&amp;quot; date: 2019-03-27T10:00:00+09:00 draft: false topics: [&amp;quot;Programming&amp;quot;] tags: [&amp;quot;jQuery&amp;quot;, &amp;quot;HTML&amp;quot;] --- &amp;lt;p&amp;gt;&amp;lt;!--more--&amp;gt;&amp;lt;/p&amp;gt; &amp;lt;pre&amp;gt;&amp;lt;code class=&amp;quot;language-cpp&amp;quot; src=&amp;quot;https://chiyosbigdragon.github.io/post/2019/03/27/sample.cpp&amp;quot;&amp;gt;&amp;lt;/code&amp;gt;&amp;lt;/pre&amp;gt; 上を表示するためのHTMLは次の通りです． ```html &amp;lt;pre&amp;gt;&amp;lt;code class=&amp;quot;language-cpp&amp;quot; src=&amp;quot;https://chiyosbigdragon.github.io/post/2019/03/27/sample.cpp&amp;quot;&amp;gt;&amp;lt;/code&amp;gt;&amp;lt;/pre&amp;gt; ``` 端的には`&amp;lt;pre&amp;gt;&amp;lt;code&amp;gt;`に`src`属性を追加します． ## 動機 最近はもっぱらラップトップでブログを書くわけですが，画面が小さく[^1]，エディタとプレビューでいっぱいいっぱいになってしまいます．こんな状態でスニペットを含むMarkdownを開いた光景は，JR武蔵小杉駅の南武線ホームを彷彿とさせます． スニペットを省略できれば全体の見通しが良くなることはもちろん，メンテナンス性の向上(?)も期待されます．どっかの数学者も言ってましたね．「ソースコードは分割せよ」って． ## 流れ - [jQueryを読み込む](#jQueryを読み込む) - [DOMの書き換え](#DOMの書き換え) - [Markdown](#Markdown) ## jQueryを読み込む 今回はjQueryを使うことにします．`&amp;lt;head&amp;gt;`内で読み込み． ```html &amp;lt;head&amp;gt; &amp;lt;script src=&amp;quot;https://ajax.</description>
    </item>
    
    <item>
      <title>SRM753 Div1Easy MaxCutFree</title>
      <link>https://chiyosbigdragon.github.io/post/2019/03/22/20190322/</link>
      <pubDate>Fri, 22 Mar 2019 14:00:00 +0900</pubDate>
      
      <guid>https://chiyosbigdragon.github.io/post/2019/03/22/20190322/</guid>
      <description>&lt;p&gt;&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Node.jsで作る番組情報通知Bot</title>
      <link>https://chiyosbigdragon.github.io/post/2019/03/13/20190313/</link>
      <pubDate>Wed, 13 Mar 2019 18:00:00 +0900</pubDate>
      
      <guid>https://chiyosbigdragon.github.io/post/2019/03/13/20190313/</guid>
      <description>実行結果 小さいかもしれませんね．すみません．
先に この記事は下記事の内容をパクったと言っても過言ではありません．
 もはや写経ですが勉強記録用なので．
動機 時の流れか，我が家では4月から新聞の購読を停止することになりました．非常に残念であります．かくいう私も，新聞をまともに読んでいたのはGコードが消えるか否かのころまでだったと思います．今ではラテ欄とスポーツ欄に隔月で発生する大相撲ぐらいしか読んでいません．あと下世話な週刊誌の広告．
テレビっ子な私はラテ欄の代替を探さなければならないわけですが，Webの番組表の扱いにくさは厳しいものがあります．あの縦長どうにかなりませんか．あの中で見たい番組を探すのは至難の技でしょう．こんな状態なので最低限，自分が興味のある番組くらいは抑えておきたいわけです．スクレイピングはPythonでかじっているので苦労はしないと思うのですが．
流れ  手作業でのURL取得 スクレイピングと整形 Slackへの通知 実行  手作業でのURL取得 番組を探す &amp;mdash; Gガイド.テレビ王国で見たい番組のキーワードや芸能人の名前を入力しURLを生成します．ここ一番ダサいです．試しに地上波+金属バット1で検索します．
https://tv.so-net.ne.jp/schedulesBySearch.action?condition.genres[0].parentId=-1&amp;amp;condition.genres[0].childId=-1&amp;amp;stationPlatformId=1&amp;amp;condition.keyword=%E9%87%91%E5%B1%9E%E3%83%90%E3%83%83%E3%83%88&amp;amp;submit=%E6%A4%9C%E7%B4%A2&amp;amp;descriptive=true
このURLとページのソースを元にスクレイピングしていきます．url.jsonには後で使う情報を入れておきます．
url.json  スクレイピングと整形 TV_scrape.js  メモ  ライブラリはcheerio-httpcliを使う．requireはimportみたいなものだろうか． 関数名の前にasyncを置くと内部でawaitが使える．awaitは待機と例外処理を担う？ index側からfetchにURLを投げる． タグはそのまま，idは#，classは.を付けて表現する． module.exportsは外から呼んだときに使えるようにするもの？  Slackへの通知 slack.js  メモ  一言一句違わず申し訳ない気持ちになる． やっていることは単純だが一から書くとなると…  index.js 通知といったら瓦版なのでチャンネル名は#瓦版です．fetchの前にawaitを入れないとエラーを吐くので気を付けます(1敗)．
 実行 node index.js  角界のロボコップ 小さいかもしれませんね．すみません．
他にやりたいこと  AWSで定期的に実行． Slackのslash-commandを用いた検索条件の追加削除．  今回はここまで．

 金属バット (お笑いコンビ) &amp;mdash; Wikipedia[return]  </description>
    </item>
    
    <item>
      <title>SRM505 Div1Easy RectangleArea</title>
      <link>https://chiyosbigdragon.github.io/post/2018/08/10/20180810/</link>
      <pubDate>Fri, 10 Aug 2018 22:00:00 +0900</pubDate>
      
      <guid>https://chiyosbigdragon.github.io/post/2018/08/10/20180810/</guid>
      <description>&lt;p&gt;&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>SRM504 Div1Easy MathContest</title>
      <link>https://chiyosbigdragon.github.io/post/2018/08/04/20180804/</link>
      <pubDate>Sat, 04 Aug 2018 12:00:00 +0900</pubDate>
      
      <guid>https://chiyosbigdragon.github.io/post/2018/08/04/20180804/</guid>
      <description>&lt;p&gt;&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>SRM503 Div1Easy ToastXToast</title>
      <link>https://chiyosbigdragon.github.io/post/2018/07/31/20180731/</link>
      <pubDate>Tue, 31 Jul 2018 16:00:00 +0900</pubDate>
      
      <guid>https://chiyosbigdragon.github.io/post/2018/07/31/20180731/</guid>
      <description>&lt;p&gt;&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>SRM502 Div1Easy TheLotteryBothDivs</title>
      <link>https://chiyosbigdragon.github.io/post/2018/07/27/20180727/</link>
      <pubDate>Fri, 27 Jul 2018 21:30:00 +0900</pubDate>
      
      <guid>https://chiyosbigdragon.github.io/post/2018/07/27/20180727/</guid>
      <description>&lt;p&gt;&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>SRM501 Div1Easy FoxPlayingGame</title>
      <link>https://chiyosbigdragon.github.io/post/2018/07/26/20180726/</link>
      <pubDate>Thu, 26 Jul 2018 17:30:00 +0900</pubDate>
      
      <guid>https://chiyosbigdragon.github.io/post/2018/07/26/20180726/</guid>
      <description>&lt;p&gt;&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>SRM500 Div1Easy MafiaGame</title>
      <link>https://chiyosbigdragon.github.io/post/2018/07/18/20180718-2/</link>
      <pubDate>Wed, 18 Jul 2018 12:00:00 +0900</pubDate>
      
      <guid>https://chiyosbigdragon.github.io/post/2018/07/18/20180718-2/</guid>
      <description>&lt;p&gt;&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>SRM500 Div2Easy SRMCards</title>
      <link>https://chiyosbigdragon.github.io/post/2018/07/18/20180718-1/</link>
      <pubDate>Wed, 18 Jul 2018 12:00:00 +0900</pubDate>
      
      <guid>https://chiyosbigdragon.github.io/post/2018/07/18/20180718-1/</guid>
      <description>&lt;p&gt;&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>